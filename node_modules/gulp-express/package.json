{
  "name": "gulp-express",
  "version": "0.1.0",
  "description": "gulp plugin for express, connect",
  "homepage": "https://github.com/gimm/gulp-express",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "gulp",
    "express",
    "livereload",
    "server"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/gimm/gulp-express"
  },
  "author": {
    "name": "yucc2008@gmail.com"
  },
  "license": "ISC",
  "dependencies": {
    "deepmerge": "~0.2.7",
    "tiny-lr": "0.0.9"
  },
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/gimm/gulp-express/issues"
  },
  "_id": "gulp-express@0.1.0",
  "dist": {
    "shasum": "e746e13bd320e2940c50c72165bd6325f23e78dd"
  },
  "_from": "gulp-express@",
  "_resolved": "https://registry.npmjs.org/gulp-express/-/gulp-express-0.1.0.tgz",
  "devDependencies": {},
  "readme": "#Gulp plugin for express\n\n## Description\nThis plugin is simple using a child process to let you run node command, thus, it can start your customized server you have.\nThe most commonly usage might be like this:\n\n*Issues with the output should be reported on the gulp-express [issue tracker](https://github.com/gimm/gulp-express/issues).*\n\n## Install\n\n```bash\n$ npm install --save-dev gulp-express\n```\n\n## Usage\n\n```js\n//gulpfile.js\nvar gulp = require('gulp');\nvar server = require('gulp-express');\n\ngulp.task('server', function () {\n    //start the server at the beginning of the task\n    server.run({\n        file: 'app.js'\n    });\n    \n    //restart the server when file changes\n    gulp.watch(['app/**/*.html'], server.notify);\n    gulp.watch(['app/styles/**/*.scss'], ['styles:scss']);\n    gulp.watch(['{.tmp,app}/styles/**/*.css'], ['styles:css', server.notify]);\n    gulp.watch(['app/scripts/**/*.js'], ['jshint']);\n    gulp.watch(['app/images/**/*'], server.notify);\n    gulp.watch(['app.js', 'routes/**/*.js'], [server.run]);\n});\n```\n```js\n//app.js\nvar express = require('express');\nvar app = module.exports.app = exports.app = express();\napp.use(require('connect-livereload')());\n```\n\n## API\n\n* run(options)\n-- run or re-run the script file, which will create a server, a express server in most of the case, probably. \ndefault options are\n```js\ndefaultOptions = {\n    env: \"development\",\n    file: \"app.js\",\n    port: 35729\n}\n```\n\n* notify\n-- send a notification to the livereload js in order to trigger a reload on page.\n\n\n",
  "_shasum": "a4e34db17eddd551aeab25f0c6fc293fa8b4f09e"
}
